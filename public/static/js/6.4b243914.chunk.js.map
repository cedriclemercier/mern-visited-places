{"version":3,"sources":["shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","test","inputReducer","state","action","Input","useReducer","initialValue","isTouched","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","element","placeholder","onChange","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","auth","useContext","AuthContext","title","description","inputHandler","setFormData","a","async","process","responseData","place","fetchPlace","Fragment","onClear","onSubmit","preventDefault","JSON","stringify","Authorization","token","userId","disabled"],"mappings":"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","file":"static/js/6.4b243914.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid &&\r\n        'form-control--invalid'}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    \r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: {\r\n            value: action.value,\r\n            isValid: action.isValid\r\n          }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\n\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nimport './PlaceForm.css';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\n\r\nconst UpdatePlace = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n        setLoadedPlace(responseData.place);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: responseData.place.title,\r\n              isValid: true\r\n            },\r\n            description: {\r\n              value: responseData.place.description,\r\n              isValid: true\r\n            }\r\n          },\r\n          true\r\n        );\r\n      } catch (err) {}\r\n    };\r\n    fetchPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  const placeUpdateSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n        'PATCH',\r\n        JSON.stringify({\r\n          title: formState.inputs.title.value,\r\n          description: formState.inputs.description.value\r\n        }),\r\n        {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      history.push('/' + auth.userId + '/places');\r\n    } catch (err) {}\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className='center'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!loadedPlace && !error) {\r\n    return (\r\n      <div className='center'>\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && loadedPlace && (\r\n        <form className='place-form' onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id='title'\r\n            element='input'\r\n            type='text'\r\n            label='Title'\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText='Please enter a valid title'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.title}\r\n            initialValid={true}\r\n          />\r\n          <Input\r\n            id='description'\r\n            element='textarea'\r\n            type='Description'\r\n            label='Title'\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText='Please enter a valid description (min 5 characters).'\r\n            onInput={inputHandler}\r\n            initialValue={loadedPlace.description}\r\n            initialValid={true}\r\n          />\r\n          <Button type='submit' disabled={!formState.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n"],"sourceRoot":""}